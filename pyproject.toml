[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "webintel"
version = "2.0.0"
authors = [
    {name = "Sunny", email = "justaskcoding76@gmail.com"},
]
description = "ðŸ¤– AI-Powered Web Intelligence System - Real-time research, comprehensive analysis, and intelligent insights using Google Gemini 2.0 Flash"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Environment :: Console",
    "Natural Language :: English",
]
keywords = [
    "ai", "artificial intelligence", "web intelligence", "research", "automation", 
    "gemini", "google ai", "web scraping", "data analysis", "nlp", "search engine",
    "real-time", "comprehensive analysis", "intelligent insights", "web research",
    "market research", "competitive analysis", "news monitoring", "trend analysis",
    "content creation", "academic research", "financial analysis", "cryptocurrency",
    "technology trends", "cli tool", "python api", "async", "fast", "reliable"
]
dependencies = [
    "aiohttp>=3.8.0,<4.0.0",
    "beautifulsoup4>=4.11.0,<5.0.0",
    "google-generativeai>=0.3.0,<1.0.0",
    "rich>=13.0.0,<14.0.0",
    "click>=8.0.0,<9.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "asyncio-throttle>=1.0.0,<2.0.0",
    "lxml>=4.9.0,<5.0.0",
    "requests>=2.28.0,<3.0.0",
    "urllib3>=1.26.0,<2.0.0",
    "typing-extensions>=4.0.0",
    "dataclasses-json>=0.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "isort>=5.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "responses>=0.22.0",
]

[project.scripts]
webintel = "webintel.cli:main"
wi = "webintel.cli:main"

[project.urls]
Homepage = "https://justm3sunny.github.io/webintel/"
Documentation = "https://justm3sunny.github.io/webintel/"
Repository = "https://github.com/JustM3Sunny/webintel"
"Bug Reports" = "https://github.com/JustM3Sunny/webintel/issues"
"Feature Requests" = "https://github.com/JustM3Sunny/webintel/discussions"
Changelog = "https://github.com/JustM3Sunny/webintel/releases"
PyPI = "https://pypi.org/project/webintel/"

[tool.setuptools]
packages = ["webintel"]
include-package-data = true

[tool.setuptools.package-data]
webintel = ["*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["webintel"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["webintel"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
